generator client {
provider = "prisma-client-js"
}
datasource db {
provider = "mongodb"
url = env("DATABASE_URL")
}

model User {
  id             String             @id @default(auto()) @map("_id") @db.ObjectId
  email          String             @unique
  username       String             @unique // Thêm trường username, đảm bảo là duy nhất
  password       String             // Thêm trường password
  avatar         String?            // Thêm trường avatar, có thể null (người dùng có thể không có avatar)
  birthdate      DateTime?          // Thêm trường birthdate, có thể null
  libraryStories UserLibraryStory[]
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  @@map("Users")
}

model UserLibraryStory {
  id        String              @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  user      User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String              @db.ObjectId
  chapters  UserLibraryChapter[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  @@map("user_library_stories")
}

model UserLibraryChapter {
  id            String                @id @default(auto()) @map("_id") @db.ObjectId
  story         UserLibraryStory      @relation(fields: [storyId], references: [id], onDelete: Cascade)
  storyId       String                @db.ObjectId
  chapterNumber Int
  rawText       String
  translation   UserTranslatedChapter? // Một chương có thể có hoặc chưa có bản dịch hiện tại
  versions      UserTranslationVersion[]
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  @@unique(fields: [storyId, chapterNumber])
  @@map("user_library_chapters")
}

model UserTranslatedChapter {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  chapter   UserLibraryChapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId String             @db.ObjectId
  currentText String           // Nội dung bản dịch hiện tại
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  @@unique(fields: [chapterId]) // Mỗi chương chỉ có một bản dịch hiện tại
  @@map("user_translated_chapters")
}

model UserTranslationVersion {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  translatedText      String
  chapter             UserLibraryChapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId           String             @db.ObjectId
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  @@map("user_translation_versions")
}
const axios = require('axios');

// Test API translate
async function testTranslateAPI() {
  try {
    console.log('üß™ B·∫Øt ƒë·∫ßu test API translate...');
    
    const testData = {
      chapters: [
        {
          chapterNumber: 1,
          title: "Chapter 1: The Beginning",
          content: "This is the first chapter of the story. It introduces the main character."
        }
      ],
      model: "gemini-2.0-flash"
    };

    console.log('üì§ G·ª≠i request v·ªõi d·ªØ li·ªáu:', JSON.stringify(testData, null, 2));

    const response = await axios.post('http://localhost:8000/translate', testData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token' // C√≥ th·ªÉ c·∫ßn token th·∫≠t
      },
      timeout: 30000 // 30 gi√¢y timeout
    });

    console.log('‚úÖ Response th√†nh c√¥ng:');
    console.log('Status:', response.status);
    console.log('Data:', JSON.stringify(response.data, null, 2));
    
    // Ki·ªÉm tra c·∫•u tr√∫c response
    if (response.data.chapters && Array.isArray(response.data.chapters)) {
      console.log('‚úÖ C·∫•u tr√∫c chapters ƒë√∫ng');
      response.data.chapters.forEach((chapter, index) => {
        console.log(`Ch∆∞∆°ng ${index + 1}:`);
        console.log(`  - Original title: ${chapter.title}`);
        console.log(`  - Translated title: ${chapter.translatedTitle}`);
        console.log(`  - Status: ${chapter.status}`);
        console.log(`  - Translation time: ${chapter.timeTranslation}s`);
      });
    } else {
      console.log('‚ùå C·∫•u tr√∫c chapters kh√¥ng ƒë√∫ng');
    }

    if (response.data.stats) {
      console.log('‚úÖ C√≥ th·ªëng k√™:', response.data.stats);
    }

  } catch (error) {
    console.error('‚ùå L·ªói test API:', error.message);
    if (error.response) {
      console.error('Response error:', error.response.status, error.response.data);
    }
  }
}

// Ch·∫°y test
testTranslateAPI(); 
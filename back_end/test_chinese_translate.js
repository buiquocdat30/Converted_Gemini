const axios = require('axios');

// Test API translate v·ªõi d·ªØ li·ªáu ti·∫øng Trung
async function testChineseTranslate() {
  try {
    console.log('üß™ B·∫Øt ƒë·∫ßu test API translate v·ªõi d·ªØ li·ªáu ti·∫øng Trung...');
    
    const testData = {
      chapters: [
        {
          chapterNumber: 1,
          title: "Á¨¨‰∏ÄÁ´† Ë∑ùÁ¶ªÊú´Êó•ËøòÊúâ180Â§©",
          content: "Âú®‰∏Ä‰∏™ÈÅ•ËøúÁöÑÊòüÁêÉÔºåÊòüÂÖâÈó™ËÄÄÔºå‰∏ÄÈ¢óÊµÅÊòüÂù†ÂÖ•\n\n..........\n\nÊùéÂÆá‰ªéÁù°Ê¢¶‰∏≠ÊÉäÈÜíÔºå‰π†ÊÉØÊÄßÁöÑÊè°Á¥ßÊîæÂú®ËÉ∏Âè£ÁöÑÁü≠ÂàÄ„ÄÇ\n\n‰ΩÜÂèëÁé∞Êâã‰∏≠ÊãøÁùÄÁöÑÂç¥ÊòØiPadÔºå‰∏äÈù¢Ê≠£Êí≠ÊîæÁùÄÁîµÂΩ±„ÄÇ\n\nÁ†∞ÁöÑ‰∏ÄÂ£∞Êû™Â£∞ËÆ©ÊùéÂÆáÁû¨Èó¥‰ªéÊ≤ôÂèë‰∏äÂºπË∑≥Ëµ∑Êù•ÔºåÊúâ‰∫õÁ•ûÁªèË¥®Âú∞ÁéØÈ°æÂõõÂë®ÔºåÂê¨Êû™Â£∞ÁöÑÊù•Ê∫ê„ÄÇ"
        }
      ],
      model: "gemini-2.0-flash"
    };

    console.log('üì§ G·ª≠i request v·ªõi d·ªØ li·ªáu ti·∫øng Trung...');

    const response = await axios.post('http://localhost:8000/translate/test', testData, {
      headers: {
        'Content-Type': 'application/json'
      },
      timeout: 60000 // 60 gi√¢y timeout
    });

    console.log('‚úÖ Response th√†nh c√¥ng:');
    console.log('Status:', response.status);
    
    // Ki·ªÉm tra c·∫•u tr√∫c response
    if (response.data.chapters && Array.isArray(response.data.chapters)) {
      console.log('‚úÖ C·∫•u tr√∫c chapters ƒë√∫ng, s·ªë l∆∞·ª£ng:', response.data.chapters.length);
      response.data.chapters.forEach((chapter, index) => {
        console.log(`\nüìñ Ch∆∞∆°ng ${index + 1}:`);
        console.log(`  - Chapter Number: ${chapter.chapterNumber}`);
        console.log(`  - Original title: ${chapter.title}`);
        console.log(`  - Translated title: ${chapter.translatedTitle}`);
        console.log(`  - Title changed: ${chapter.title !== chapter.translatedTitle}`);
        console.log(`  - Status: ${chapter.status}`);
        console.log(`  - Translation time: ${chapter.timeTranslation}s`);
        console.log(`  - Original content length: ${chapter.content?.length || 0}`);
        console.log(`  - Translated content length: ${chapter.translatedContent?.length || 0}`);
        console.log(`  - Content changed: ${chapter.content !== chapter.translatedContent}`);
        console.log(`  - Original content (50 chars): ${chapter.content?.substring(0, 50)}...`);
        console.log(`  - Translated content (50 chars): ${chapter.translatedContent?.substring(0, 50)}...`);
        if (chapter.translationError) {
          console.log(`  - Error: ${chapter.translationError}`);
        }
      });
    } else {
      console.log('‚ùå C·∫•u tr√∫c chapters kh√¥ng ƒë√∫ng');
      console.log('Response data:', response.data);
    }

    if (response.data.stats) {
      console.log('\nüìä Th·ªëng k√™:', response.data.stats);
    }

  } catch (error) {
    console.error('‚ùå L·ªói test API:', error.message);
    if (error.response) {
      console.error('Response status:', error.response.status);
      console.error('Response data:', error.response.data);
    } else if (error.request) {
      console.error('Request error - Server c√≥ th·ªÉ kh√¥ng ch·∫°y');
    }
  }
}

// Ch·∫°y test
testChineseTranslate(); 